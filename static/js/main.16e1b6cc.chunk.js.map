{"version":3,"sources":["redux/actions/inputActions.js","redux/constants.js","redux/actions/budgetActions.js","helpers/getExpenses.js","redux/selectors/selectors.js","components/shared/Form/Form.styles.js","components/shared/Form/Form.jsx","components/shared/Label/Label.styles.js","components/shared/Label/Label.jsx","components/shared/Input/Input.styles.js","components/shared/Input/Input.jsx","components/shared/Button/Button.styles.js","components/shared/Button/Button.jsx","components/Notification/Notification.styles.js","components/Notification/Notification.jsx","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetForm.styles.js","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseForm.styles.js","redux/actions/expensesActions.js","components/ExpensesTable/ExpensesTable.styles.js","components/ExpensesTable/ExpensesTable.jsx","components/Values/Stat/Stat.styles.js","components/Values/Stat/Stat.jsx","helpers/calculateBalance.js","components/Values/Values.styles.js","components/Values/Values.jsx","components/App/App.styles.js","components/App/App.jsx","redux/reducers/inputBudgetReducer.js","redux/reducers/budgetReducer.js","redux/reducers/inputExpensesNameReducer.js","redux/reducers/inputExpensesAmountReducer.js","redux/reducers/expensesReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["clearInput","type","payload","setBudget","value","getExpenses","expensesArr","length","reduce","acc","el","amount","getInputBudgetValue","state","inputBudgetValue","getBudgetValue","budget","getInputExpenseName","inputExpensesName","getInputExpenseAmount","inputExpensesAmount","getExpensesArr","expenses","getExpensesValue","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","onChange","name","defaultProps","StyledButton","button","Button","onClick","StyledNotification","span","Notification","text","BudgetForm","handleSubmit","e","preventDefault","Number","this","inputBudget","PureComponent","mapDispatchToProps","event","target","connect","ExpenseForm","addExpenses","id","shortid","generate","obj","Table","table","onRemove","items","map","key","Container","div","isPositive","p","Value","Stat","calculateBalance","section","balance","App","inputBudgetReducer","action","budgetReducer","inputExpensesNameReducer","inititalState","expensesReducer","filter","rootReducer","combineReducers","inputExpensesAmountReducer","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16e1b6cc.chunk.js","sourcesContent":["import {\n  INPUT_BUDGET,\n  INPUT_EXP_NAME,\n  INPUT_EXP_AMOUNT,\n  CLEAR_INPUT,\n} from '../constants';\n\nexport const inputBudget = event => ({\n  type: INPUT_BUDGET,\n  payload: event.target.value,\n});\n\nexport const inputExpensesName = event => ({\n  type: INPUT_EXP_NAME,\n  payload: event.target.value,\n});\n\nexport const inputExpensesAmount = event => ({\n  type: INPUT_EXP_AMOUNT,\n  payload: event.target.value,\n});\n\nexport const clearInput = () => ({\n  type: CLEAR_INPUT,\n  payload: '',\n});\n","export const INPUT_BUDGET = 'INPUT_BUDGET';\nexport const INPUT_EXP_NAME = 'INPUT_EXP_NAME';\nexport const INPUT_EXP_AMOUNT = 'INPUT_EXP_AMOUNT';\nexport const CLEAR_INPUT = 'CLEAR_INPUT';\n\nexport const SET_BUDGET = 'SET_BUDGET';\nexport const ADD_EXPENCES = 'ADD_EXPENCES';\nexport const DELETE_EXPENCES = 'DELETE_EXPENCES';\n","import { SET_BUDGET } from '../constants';\n\nconst setBudget = value => ({\n  type: SET_BUDGET,\n  payload: value,\n});\n\nexport default setBudget;\n","const getExpenses = expensesArr => {\n  if (expensesArr.length > 0) {\n    return expensesArr.reduce((acc, el) => acc + el.amount, 0);\n  }\n  return 0;\n};\n\nexport default getExpenses;\n","import getExpenses from '../../helpers/getExpenses';\n\nexport const getInputBudgetValue = state => state.inputBudgetValue;\nexport const getBudgetValue = state => state.budget;\n\nexport const getInputExpenseName = state => state.inputExpensesName;\nexport const getInputExpenseAmount = state => state.inputExpensesAmount;\n\nexport const getExpensesArr = state => state.expenses;\nexport const getExpensesValue = state => getExpenses(state.expenses);\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport default StyledForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledForm from './Form.styles';\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nexport default StyledLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledLabel from './Label.styles';\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nexport default StyledInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledInput from './Input.styles';\n\nconst Input = ({\n  // type = 'text',\n  // value = '',\n  // onChange = () => null,\n  // name = '',\n  type,\n  value,\n  onChange,\n  name,\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => null,\n  name: '',\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nexport default StyledButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledButton from './Button.styles';\n\nconst Button = ({\n  // type = 'button', label = '', onClick = () => null\n  type,\n  label,\n  onClick,\n}) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  label: '',\n  onClick: () => null,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst StyledNotification = styled.span`\n  font-size: 12px;\n  color: red;\n`;\n\nexport default StyledNotification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledNotification from './Notification.styles';\n\nconst Notification = ({ text }) => (\n  <StyledNotification>{text}</StyledNotification>\n);\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { inputBudget, clearInput } from '../../redux/actions/inputActions';\nimport setBudget from '../../redux/actions/budgetActions';\nimport { getInputBudgetValue } from '../../redux/selectors/selectors';\n\nimport Form from '../shared/Form/Form';\nimport Label from '../shared/Label/Label';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\nimport Notification from '../Notification/Notification';\n\nimport labelStyles from './BudgetForm.styles';\n\nclass BudgetForm extends PureComponent {\n  static propTypes = {\n    input: PropTypes.string.isRequired,\n    clearInput: PropTypes.func.isRequired,\n    setBudget: PropTypes.func.isRequired,\n    inputBudget: PropTypes.func.isRequired,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { input, clearInput, setBudget } = this.props;\n\n    if (input.length > 0 && Number(input) > 0) {\n      setBudget(Number(input));\n      clearInput();\n    }\n  };\n\n  render() {\n    const { input, inputBudget } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={input} onChange={inputBudget} />\n          {Number(input) < 0 && <Notification text=\"Should be positive\" />}\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  input: getInputBudgetValue(state),\n});\n\nconst mapDispatchToProps = {\n  inputBudget,\n  clearInput,\n  setBudget,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetForm);\n","const labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default labelStyles;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { addExpenses } from '../../redux/actions/expensesActions';\nimport {\n  inputExpensesName,\n  inputExpensesAmount,\n  clearInput,\n} from '../../redux/actions/inputActions';\nimport {\n  getInputExpenseName,\n  getInputExpenseAmount,\n} from '../../redux/selectors/selectors';\n\nimport Form from '../shared/Form/Form';\nimport Label from '../shared/Label/Label';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\nimport Notification from '../Notification/Notification';\n\nimport labelStyles from './ExpenseForm.styles';\n\nclass ExpenseForm extends PureComponent {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    inputExpensesName: PropTypes.func.isRequired,\n    inputExpensesAmount: PropTypes.func.isRequired,\n    clearInput: PropTypes.func.isRequired,\n    addExpenses: PropTypes.func.isRequired,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, amount, clearInput, addExpenses } = this.props;\n\n    if (name.length > 0 && Number(amount) > 0) {\n      const expense = {\n        id: shortid.generate(),\n        name,\n        amount: Number(amount),\n      };\n\n      addExpenses(expense);\n      clearInput();\n    }\n  };\n\n  render() {\n    const { name, amount, inputExpensesName, inputExpensesAmount } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            // value={this.state.name}\n            // onChange={this.handleChange}\n            value={name}\n            onChange={inputExpensesName}\n          />\n          {name.length === 0 && <Notification text=\"Should not be empty\" />}\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            // value={this.state.amount}\n            // onChange={this.handleChange}\n            value={amount}\n            onChange={inputExpensesAmount}\n          />\n          {Number(amount) < 0 && <Notification text=\"Should be positive\" />}\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  name: getInputExpenseName(state),\n  amount: getInputExpenseAmount(state),\n});\n\nconst mapDispatchToProps = {\n  inputExpensesName,\n  inputExpensesAmount,\n  clearInput,\n  addExpenses,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","const labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default labelStyles;\n","import { ADD_EXPENCES, DELETE_EXPENCES } from '../constants';\n\nexport const addExpenses = obj => ({\n  type: ADD_EXPENCES,\n  payload: obj,\n});\n\nexport const deleteExpenses = id => ({\n  type: DELETE_EXPENCES,\n  payload: id,\n});\n","import styled from 'styled-components';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../shared/Button/Button';\n\nimport { deleteExpenses } from '../../redux/actions/expensesActions';\nimport { getExpensesArr } from '../../redux/selectors/selectors';\n\nimport Table from './ExpensesTable.styles';\n\nconst ExpensesTable = ({ items, onRemove }) => (\n  <>\n    {items.length > 0 && (\n      <Table>\n        <thead>\n          <tr>\n            <th>Expense name</th>\n            <th>Expense amount</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(({ id, name, amount }) => (\n            <tr key={id}>\n              <td>{name}</td>\n              <td>{amount}</td>\n              <td>\n                <Button label=\"Delete\" onClick={() => onRemove(id)} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )}\n  </>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      amount: PropTypes.number,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  items: getExpensesArr(state),\n});\n\nconst mapDispatchToProps = {\n  onRemove: deleteExpenses,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nexport const Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Label, Value } from './Stat.styles';\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nexport default Stat;\n","const calculateBalance = (budget, expenses) => budget - expenses;\n\nexport default calculateBalance;\n","import styled from 'styled-components';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Stat from './Stat/Stat';\nimport {\n  getBudgetValue,\n  getExpensesValue,\n} from '../../redux/selectors/selectors';\nimport calculateBalance from '../../helpers/calculateBalance';\n\nimport Container from './Values.styles';\n\nconst Values = ({ budget, expenses }) => {\n  const balance = calculateBalance(budget, expenses);\n\n  return (\n    <Container>\n      <Stat label=\"Budget\" value={budget} isPositive />\n      <Stat label=\"Expenses\" value={expenses} />\n      <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </Container>\n  );\n};\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  budget: getBudgetValue(state),\n  expenses: getExpensesValue(state),\n});\n\nexport default connect(mapStateToProps, null)(Values);\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default Container;\n","import React from 'react';\nimport BudgetForm from '../BudgetForm/BudgetForm';\nimport ExpenseForm from '../ExpenseForm/ExpenseForm';\nimport ExpensesTable from '../ExpensesTable/ExpensesTable';\nimport Values from '../Values/Values';\n\nimport Container from './App.styles';\n\nconst App = () => (\n  <Container>\n    <BudgetForm />\n    <Values />\n    <ExpenseForm />\n    <ExpensesTable />\n  </Container>\n);\n\nexport default App;\n","import { INPUT_BUDGET, CLEAR_INPUT } from '../constants';\n\nconst inititalState = '0';\n\nconst inputBudgetReducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case INPUT_BUDGET:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default inputBudgetReducer;\n","import { SET_BUDGET } from '../constants';\n\nconst initialState = 0;\n\nconst budgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BUDGET:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import { INPUT_EXP_NAME, CLEAR_INPUT } from '../constants';\n\nconst inititalState = '';\n\nconst inputExpensesNameReducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case INPUT_EXP_NAME:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default inputExpensesNameReducer;\n","import { INPUT_EXP_AMOUNT, CLEAR_INPUT } from '../constants';\n\nconst inititalState = '0';\n\nconst inputExpensesNameReducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case INPUT_EXP_AMOUNT:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default inputExpensesNameReducer;\n","import { ADD_EXPENCES, DELETE_EXPENCES } from '../constants';\n\nconst inititalState = [];\n\nconst expensesReducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case ADD_EXPENCES:\n      return [...state, action.payload];\n    case DELETE_EXPENCES:\n      return state.filter(el => el.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import { combineReducers } from 'redux';\n\nimport inputBudgetReducer from './inputBudgetReducer';\nimport budgetReducer from './budgetReducer';\nimport inputExpensesNameReducer from './inputExpensesNameReducer';\nimport inputExpensesAmountReducer from './inputExpensesAmountReducer';\nimport expensesReducer from './expensesReducer';\n\nconst rootReducer = combineReducers({\n  inputBudgetValue: inputBudgetReducer,\n  inputExpensesName: inputExpensesNameReducer,\n  inputExpensesAmount: inputExpensesAmountReducer,\n  budget: budgetReducer,\n  expenses: expensesReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}